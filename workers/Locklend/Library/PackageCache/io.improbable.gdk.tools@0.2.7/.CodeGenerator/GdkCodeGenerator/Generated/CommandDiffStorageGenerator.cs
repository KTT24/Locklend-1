//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Improbable.Gdk.CodeGenerator {
    using System;
    using Improbable.Gdk.CodeGeneration.Jobs;
    
    
    public partial class CommandDiffStorageGenerator : CommandDiffStorageGeneratorBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 3 "Templates/CommandDiffStorageGenerator.tt"

    var componentDetails = GetComponentDetails();
    var generatedHeader = CommonGeneratorUtils.GetGeneratedHeader();
    var commandDetailsList = GetCommandDetailsList();

            
            #line default
            #line hidden
            
            #line 8 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( generatedHeader ));
            
            #line default
            #line hidden
            
            #line 8 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing Improbable.Gdk.Core;\r" +
                    "\nusing Unity.Entities;\r\n\r\nnamespace ");
            
            #line default
            #line hidden
            
            #line 15 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( qualifiedNamespace ));
            
            #line default
            #line hidden
            
            #line 15 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("\r\n{\r\n    public partial class ");
            
            #line default
            #line hidden
            
            #line 17 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentDetails.ComponentName ));
            
            #line default
            #line hidden
            
            #line 17 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("\r\n    {\r\n");
            
            #line default
            #line hidden
            
            #line 19 "Templates/CommandDiffStorageGenerator.tt"
 foreach (var command in commandDetailsList) {
        var receivedRequestType = command.CommandName + ".ReceivedRequest";
        var receivedResponseType = command.CommandName + ".ReceivedResponse";

            
            #line default
            #line hidden
            
            #line 23 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("        public class Diff");
            
            #line default
            #line hidden
            
            #line 23 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandName ));
            
            #line default
            #line hidden
            
            #line 23 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("CommandStorage : IComponentCommandDiffStorage\r\n            , IDiffCommandRequestS" +
                    "torage<");
            
            #line default
            #line hidden
            
            #line 24 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 24 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">\r\n            , IDiffCommandResponseStorage<");
            
            #line default
            #line hidden
            
            #line 25 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 25 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">\r\n        {\r\n            private MessageList<");
            
            #line default
            #line hidden
            
            #line 27 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 27 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("> requestStorage =\r\n                new MessageList<");
            
            #line default
            #line hidden
            
            #line 28 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 28 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">();\r\n\r\n            private MessageList<");
            
            #line default
            #line hidden
            
            #line 30 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 30 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("> responseStorage =\r\n                new MessageList<");
            
            #line default
            #line hidden
            
            #line 31 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 31 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(@">();

            private readonly RequestComparer requestComparer = new RequestComparer();
            private readonly ResponseComparer responseComparer = new ResponseComparer();

            private bool requestsSorted;
            private bool responsesSorted;

            public uint GetComponentId()
            {
                return ComponentId;
            }

            public uint GetCommandId()
            {
                return ");
            
            #line default
            #line hidden
            
            #line 46 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 46 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(";\r\n            }\r\n\r\n            public Type GetRequestType()\r\n            {\r\n    " +
                    "            return typeof(");
            
            #line default
            #line hidden
            
            #line 51 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 51 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(");\r\n            }\r\n\r\n            public Type GetResponseType()\r\n            {\r\n  " +
                    "              return typeof(");
            
            #line default
            #line hidden
            
            #line 56 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 56 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(@");
            }

            public void Clear()
            {
                requestStorage.Clear();
                responseStorage.Clear();
                requestsSorted = false;
                responsesSorted = false;
            }

            public void RemoveRequests(long entityId)
            {
                requestStorage.RemoveAll(request => request.EntityId.Id == entityId);
            }

            public void AddRequest(");
            
            #line default
            #line hidden
            
            #line 72 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 72 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(" request)\r\n            {\r\n                requestStorage.Add(request);\r\n         " +
                    "   }\r\n\r\n            public void AddResponse(");
            
            #line default
            #line hidden
            
            #line 77 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 77 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(" response)\r\n            {\r\n                responseStorage.Add(response);\r\n      " +
                    "      }\r\n\r\n            public ReceivedMessagesSpan<");
            
            #line default
            #line hidden
            
            #line 82 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 82 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("> GetRequests()\r\n            {\r\n                return new ReceivedMessagesSpan<");
            
            #line default
            #line hidden
            
            #line 84 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 84 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">(requestStorage);\r\n            }\r\n\r\n            public ReceivedMessagesSpan<");
            
            #line default
            #line hidden
            
            #line 87 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 87 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(@"> GetRequests(EntityId targetEntityId)
            {
                if (!requestsSorted)
                {
                    requestStorage.Sort(requestComparer);
                    requestsSorted = true;
                }

                var (firstIndex, count) = requestStorage.GetEntityRange(targetEntityId);

                return new ReceivedMessagesSpan<");
            
            #line default
            #line hidden
            
            #line 97 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 97 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">(requestStorage, firstIndex, count);\r\n            }\r\n\r\n            public Receiv" +
                    "edMessagesSpan<");
            
            #line default
            #line hidden
            
            #line 100 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 100 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("> GetResponses()\r\n            {\r\n                return new ReceivedMessagesSpan<" +
                    "");
            
            #line default
            #line hidden
            
            #line 102 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 102 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">(responseStorage);\r\n            }\r\n\r\n            public ReceivedMessagesSpan<");
            
            #line default
            #line hidden
            
            #line 105 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 105 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(@"> GetResponse(long requestId)
            {
                if (!responsesSorted)
                {
                    responseStorage.Sort(responseComparer);
                    responsesSorted = true;
                }

                var responseIndex = responseStorage.GetResponseIndex(requestId);
                if (responseIndex < 0)
                {
                    return ReceivedMessagesSpan<");
            
            #line default
            #line hidden
            
            #line 116 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 116 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">.Empty();\r\n                }\r\n\r\n                return new ReceivedMessagesSpan<" +
                    "");
            
            #line default
            #line hidden
            
            #line 119 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 119 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">(responseStorage, responseIndex, 1);\r\n            }\r\n\r\n            private class" +
                    " RequestComparer : IComparer<");
            
            #line default
            #line hidden
            
            #line 122 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 122 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">\r\n            {\r\n                public int Compare(");
            
            #line default
            #line hidden
            
            #line 124 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 124 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(" x, ");
            
            #line default
            #line hidden
            
            #line 124 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 124 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(" y)\r\n                {\r\n                    return x.EntityId.Id.CompareTo(y.Enti" +
                    "tyId.Id);\r\n                }\r\n            }\r\n\r\n            private class Respons" +
                    "eComparer : IComparer<");
            
            #line default
            #line hidden
            
            #line 130 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 130 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">\r\n            {\r\n                public int Compare(");
            
            #line default
            #line hidden
            
            #line 132 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 132 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(" x, ");
            
            #line default
            #line hidden
            
            #line 132 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 132 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(" y)\r\n                {\r\n                    return x.RequestId.CompareTo(y.Reques" +
                    "tId);\r\n                }\r\n            }\r\n        }\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 139 "Templates/CommandDiffStorageGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 140 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("\r\n");
            
            #line default
            #line hidden
            
            #line 141 "Templates/CommandDiffStorageGenerator.tt"
 foreach (var command in commandDetailsList) {
        var requestType = command.CommandName + ".Request";
        var responseType = command.CommandName + ".Response";

            
            #line default
            #line hidden
            
            #line 145 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("        public class ");
            
            #line default
            #line hidden
            
            #line 145 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandName ));
            
            #line default
            #line hidden
            
            #line 145 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("CommandsToSendStorage : ICommandSendStorage, IComponentCommandSendStorage\r\n      " +
                    "      , ICommandRequestSendStorage<");
            
            #line default
            #line hidden
            
            #line 146 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requestType ));
            
            #line default
            #line hidden
            
            #line 146 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">\r\n            , ICommandResponseSendStorage<");
            
            #line default
            #line hidden
            
            #line 147 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( responseType ));
            
            #line default
            #line hidden
            
            #line 147 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">\r\n        {\r\n            private MessageList<CommandRequestWithMetaData<");
            
            #line default
            #line hidden
            
            #line 149 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requestType ));
            
            #line default
            #line hidden
            
            #line 149 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">> requestStorage =\r\n                new MessageList<CommandRequestWithMetaData<");
            
            #line default
            #line hidden
            
            #line 150 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requestType ));
            
            #line default
            #line hidden
            
            #line 150 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">>();\r\n\r\n            private MessageList<");
            
            #line default
            #line hidden
            
            #line 152 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( responseType ));
            
            #line default
            #line hidden
            
            #line 152 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("> responseStorage =\r\n                new MessageList<");
            
            #line default
            #line hidden
            
            #line 153 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( responseType ));
            
            #line default
            #line hidden
            
            #line 153 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">();\r\n\r\n            public uint GetComponentId()\r\n            {\r\n                " +
                    "return ComponentId;\r\n            }\r\n\r\n            public uint GetCommandId()\r\n  " +
                    "          {\r\n                return ");
            
            #line default
            #line hidden
            
            #line 162 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 162 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(";\r\n            }\r\n\r\n            public Type GetRequestType()\r\n            {\r\n    " +
                    "            return typeof(");
            
            #line default
            #line hidden
            
            #line 167 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requestType ));
            
            #line default
            #line hidden
            
            #line 167 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(");\r\n            }\r\n\r\n            public Type GetResponseType()\r\n            {\r\n  " +
                    "              return typeof(");
            
            #line default
            #line hidden
            
            #line 172 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( responseType ));
            
            #line default
            #line hidden
            
            #line 172 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(");\r\n            }\r\n\r\n            public void Clear()\r\n            {\r\n            " +
                    "    requestStorage.Clear();\r\n                responseStorage.Clear();\r\n         " +
                    "   }\r\n\r\n            public void AddRequest(");
            
            #line default
            #line hidden
            
            #line 181 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requestType ));
            
            #line default
            #line hidden
            
            #line 181 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(" request, Entity entity, long requestId)\r\n            {\r\n                requestS" +
                    "torage.Add(new CommandRequestWithMetaData<");
            
            #line default
            #line hidden
            
            #line 183 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requestType ));
            
            #line default
            #line hidden
            
            #line 183 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">(request, entity, requestId));\r\n            }\r\n\r\n            public void AddResp" +
                    "onse(");
            
            #line default
            #line hidden
            
            #line 186 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( responseType ));
            
            #line default
            #line hidden
            
            #line 186 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(" response)\r\n            {\r\n                responseStorage.Add(response);\r\n      " +
                    "      }\r\n\r\n            internal MessageList<CommandRequestWithMetaData<");
            
            #line default
            #line hidden
            
            #line 191 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requestType ));
            
            #line default
            #line hidden
            
            #line 191 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(">> GetRequests()\r\n            {\r\n                return requestStorage;\r\n        " +
                    "    }\r\n\r\n            internal MessageList<");
            
            #line default
            #line hidden
            
            #line 196 "Templates/CommandDiffStorageGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( responseType ));
            
            #line default
            #line hidden
            
            #line 196 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("> GetResponses()\r\n            {\r\n                return responseStorage;\r\n       " +
                    "     }\r\n        }\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 202 "Templates/CommandDiffStorageGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 203 "Templates/CommandDiffStorageGenerator.tt"
            this.Write("    }\r\n}\r\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class CommandDiffStorageGeneratorBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
