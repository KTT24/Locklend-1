//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Improbable.Gdk.CodeGenerator {
    using System;
    using Improbable.Gdk.CodeGeneration.Jobs;
    
    
    public partial class UnityReactiveComponentHandlersGenerator : UnityReactiveComponentHandlersGeneratorBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 3 "Templates/UnityReactiveComponentHandlersGenerator.tt"

    var componentDetails = GetComponentDetails();
    var generatedHeader = CommonGeneratorUtils.GetGeneratedHeader();
    var commandDetailsList = GetCommandDetailsList();
    var eventDetailsList = GetEventDetailsList();
    var componentNamespace = $"global::{qualifiedNamespace}.{componentDetails.ComponentName}";
    var profilingStart = $"Profiler.BeginSample(\"{componentDetails.ComponentName}\");";
    var profilingEnd = "Profiler.EndSample();";

            
            #line default
            #line hidden
            
            #line 12 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( generatedHeader ));
            
            #line default
            #line hidden
            
            #line 12 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@"

#if USE_LEGACY_REACTIVE_COMPONENTS
using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Profiling;
using Unity.Mathematics;
using Unity.Entities;
using Unity.Collections;
using Improbable.Worker.CInterop;
using Improbable.Gdk.Core;
using Improbable.Gdk.ReactiveComponents;

namespace ");
            
            #line default
            #line hidden
            
            #line 26 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( qualifiedNamespace ));
            
            #line default
            #line hidden
            
            #line 26 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n{\r\n    public partial class ");
            
            #line default
            #line hidden
            
            #line 28 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentDetails.ComponentName ));
            
            #line default
            #line hidden
            
            #line 28 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n    {\r\n        internal class ReactiveComponentReplicator : IReactiveComponentR" +
                    "eplicationHandler\r\n        {\r\n            public uint ComponentId => ");
            
            #line default
            #line hidden
            
            #line 32 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentDetails.ComponentId ));
            
            #line default
            #line hidden
            
            #line 32 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(";\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 34 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 if (eventDetailsList.Count > 0) { 
            
            #line default
            #line hidden
            
            #line 35 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("            public EntityQueryDesc EventQuery => new EntityQueryDesc\r\n           " +
                    " {\r\n                All = new[]\r\n                {\r\n");
            
            #line default
            #line hidden
            
            #line 39 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 foreach (var eventDetail in eventDetailsList) { 
            
            #line default
            #line hidden
            
            #line 40 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    ComponentType.ReadWrite<EventSender.");
            
            #line default
            #line hidden
            
            #line 40 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetail.EventName ));
            
            #line default
            #line hidden
            
            #line 40 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(),\r\n");
            
            #line default
            #line hidden
            
            #line 41 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 42 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    ComponentType.ReadOnly<SpatialEntityId>()\r\n                }," +
                    "\r\n            };\r\n");
            
            #line default
            #line hidden
            
            #line 45 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 46 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("            public EntityQueryDesc EventQuery => null;\r\n");
            
            #line default
            #line hidden
            
            #line 47 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 48 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n");
            
            #line default
            #line hidden
            
            #line 49 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 if (commandDetailsList.Count > 0) { 
            
            #line default
            #line hidden
            
            #line 50 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("            public EntityQueryDesc[] CommandQueries => new EntityQueryDesc[]\r\n   " +
                    "         {\r\n");
            
            #line default
            #line hidden
            
            #line 52 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 53 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                new EntityQueryDesc()\r\n                {\r\n                    All" +
                    " = new[]\r\n                    {\r\n                        ComponentType.ReadWrite" +
                    "<");
            
            #line default
            #line hidden
            
            #line 57 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 57 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".CommandSenders.");
            
            #line default
            #line hidden
            
            #line 57 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 57 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(),\r\n                        ComponentType.ReadWrite<");
            
            #line default
            #line hidden
            
            #line 58 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 58 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".CommandResponders.");
            
            #line default
            #line hidden
            
            #line 58 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 58 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(),\r\n                    },\r\n                },\r\n");
            
            #line default
            #line hidden
            
            #line 61 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 62 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("            };\r\n");
            
            #line default
            #line hidden
            
            #line 63 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 64 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("            public EntityQueryDesc[] CommandQueries => null;\r\n");
            
            #line default
            #line hidden
            
            #line 65 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 66 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n            public void SendEvents(NativeArray<ArchetypeChunk> chunkArray, Comp" +
                    "onentSystemBase system, ComponentUpdateSystem componentUpdateSystem)\r\n          " +
                    "  {\r\n");
            
            #line default
            #line hidden
            
            #line 69 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 if (eventDetailsList.Count > 0) { 
            
            #line default
            #line hidden
            
            #line 70 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                ");
            
            #line default
            #line hidden
            
            #line 70 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( profilingStart ));
            
            #line default
            #line hidden
            
            #line 70 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n\r\n                var spatialOSEntityType = system.GetArchetypeChunkComponentTy" +
                    "pe<SpatialEntityId>(true);\r\n");
            
            #line default
            #line hidden
            
            #line 73 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 foreach (var eventDetail in eventDetailsList) { 
            
            #line default
            #line hidden
            
            #line 74 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                var event");
            
            #line default
            #line hidden
            
            #line 74 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetail.EventName ));
            
            #line default
            #line hidden
            
            #line 74 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("Type = system.GetArchetypeChunkComponentType<EventSender.");
            
            #line default
            #line hidden
            
            #line 74 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetail.EventName ));
            
            #line default
            #line hidden
            
            #line 74 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(true);\r\n");
            
            #line default
            #line hidden
            
            #line 75 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 76 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                foreach (var chunk in chunkArray)\r\n                {\r\n           " +
                    "         var entityIdArray = chunk.GetNativeArray(spatialOSEntityType);\r\n");
            
            #line default
            #line hidden
            
            #line 79 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 foreach (var eventDetail in eventDetailsList) { 
            
            #line default
            #line hidden
            
            #line 80 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    var event");
            
            #line default
            #line hidden
            
            #line 80 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetail.EventName ));
            
            #line default
            #line hidden
            
            #line 80 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("Array = chunk.GetNativeArray(event");
            
            #line default
            #line hidden
            
            #line 80 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetail.EventName ));
            
            #line default
            #line hidden
            
            #line 80 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("Type);\r\n");
            
            #line default
            #line hidden
            
            #line 81 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 82 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    for (var i = 0; i < entityIdArray.Length; i++)\r\n             " +
                    "       {\r\n");
            
            #line default
            #line hidden
            
            #line 84 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 foreach (var ev in eventDetailsList) {
        var eventType = ev.EventName + ".Event";

            
            #line default
            #line hidden
            
            #line 87 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                        foreach (var e in event");
            
            #line default
            #line hidden
            
            #line 87 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( ev.EventName ));
            
            #line default
            #line hidden
            
            #line 87 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("Array[i].Events)\r\n                        {\r\n                            componen" +
                    "tUpdateSystem.SendEvent(new ");
            
            #line default
            #line hidden
            
            #line 89 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventType ));
            
            #line default
            #line hidden
            
            #line 89 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("(e), entityIdArray[i].EntityId);\r\n                        }\r\n\r\n                  " +
                    "      event");
            
            #line default
            #line hidden
            
            #line 92 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( ev.EventName ));
            
            #line default
            #line hidden
            
            #line 92 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("Array[i].Events.Clear();\r\n");
            
            #line default
            #line hidden
            
            #line 93 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 94 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    }\r\n                }\r\n\r\n                ");
            
            #line default
            #line hidden
            
            #line 97 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( profilingEnd ));
            
            #line default
            #line hidden
            
            #line 97 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n");
            
            #line default
            #line hidden
            
            #line 98 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 99 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("            }\r\n\r\n            public void SendCommands(NativeArray<ArchetypeChunk>" +
                    " chunkArray, ComponentSystemBase system, CommandSystem commandSystem)\r\n         " +
                    "   {\r\n");
            
            #line default
            #line hidden
            
            #line 103 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 if (commandDetailsList.Count > 0) { 
            
            #line default
            #line hidden
            
            #line 104 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                ");
            
            #line default
            #line hidden
            
            #line 104 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( profilingStart ));
            
            #line default
            #line hidden
            
            #line 104 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n                var entityType = system.GetArchetypeChunkEntityType();\r\n");
            
            #line default
            #line hidden
            
            #line 106 "Templates/UnityReactiveComponentHandlersGenerator.tt"

for (var i = 0; i < commandDetailsList.Count; i++) {
    var commandDetails = commandDetailsList[i];
    var commandName = commandDetails.CommandName;
    var commandSenderType = $"{componentNamespace}.CommandSenders.{commandName}";
    var commandResponderType = $"{componentNamespace}.CommandResponders.{commandName}";

            
            #line default
            #line hidden
            
            #line 113 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                var senderType");
            
            #line default
            #line hidden
            
            #line 113 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandName ));
            
            #line default
            #line hidden
            
            #line 113 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(" = system.GetArchetypeChunkComponentType<");
            
            #line default
            #line hidden
            
            #line 113 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandSenderType ));
            
            #line default
            #line hidden
            
            #line 113 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(true);\r\n                var responderType");
            
            #line default
            #line hidden
            
            #line 114 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandName ));
            
            #line default
            #line hidden
            
            #line 114 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(" = system.GetArchetypeChunkComponentType<");
            
            #line default
            #line hidden
            
            #line 114 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandResponderType ));
            
            #line default
            #line hidden
            
            #line 114 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(true);\r\n");
            
            #line default
            #line hidden
            
            #line 115 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 116 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n                foreach (var chunk in chunkArray)\r\n                {\r\n         " +
                    "           var entities = chunk.GetNativeArray(entityType);\r\n");
            
            #line default
            #line hidden
            
            #line 120 "Templates/UnityReactiveComponentHandlersGenerator.tt"

for (var i = 0; i < commandDetailsList.Count; i++) {
    var commandDetails = commandDetailsList[i];
    var commandName = commandDetails.CommandName;
    var commandSenderType = $"{componentNamespace}.CommandSenders.{commandName}";
    var commandResponderType = $"{componentNamespace}.CommandResponders.{commandName}";

            
            #line default
            #line hidden
            
            #line 127 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    if (chunk.Has(senderType");
            
            #line default
            #line hidden
            
            #line 127 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandName ));
            
            #line default
            #line hidden
            
            #line 127 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("))\r\n                    {\r\n                        var senders = chunk.GetNativeA" +
                    "rray(senderType");
            
            #line default
            #line hidden
            
            #line 129 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandName ));
            
            #line default
            #line hidden
            
            #line 129 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@");
                        for (var i = 0; i < senders.Length; i++)
                        {
                            var requests = senders[i].RequestsToSend;
                            if (requests.Count > 0)
                            {
                                foreach (var request in requests)
                                {
                                    commandSystem.SendCommand(request, entities[i]);
                                }

                                requests.Clear();
                            }
                        }

                        var responders = chunk.GetNativeArray(responderType");
            
            #line default
            #line hidden
            
            #line 144 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandName ));
            
            #line default
            #line hidden
            
            #line 144 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@");
                        for (var i = 0; i < responders.Length; i++)
                        {
                            var responses = responders[i].ResponsesToSend;
                            if (responses.Count > 0)
                            {
                                foreach (var response in responses)
                                {
                                    commandSystem.SendResponse(response);
                                }

                                responses.Clear();
                            }
                        }
                    }

");
            
            #line default
            #line hidden
            
            #line 160 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 161 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                }\r\n\r\n                ");
            
            #line default
            #line hidden
            
            #line 163 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( profilingEnd ));
            
            #line default
            #line hidden
            
            #line 163 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n");
            
            #line default
            #line hidden
            
            #line 164 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 165 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@"            }
        }

        internal class ComponentCleanup : ComponentCleanupHandler
        {
            public override EntityQueryDesc CleanupArchetypeQuery => new EntityQueryDesc
            {
                Any = new ComponentType[]
                {
                    ComponentType.ReadWrite<ComponentAdded<");
            
            #line default
            #line hidden
            
            #line 174 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 174 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".Component>>(),\r\n                    ComponentType.ReadWrite<ComponentRemoved<");
            
            #line default
            #line hidden
            
            #line 175 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 175 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".Component>>(),\r\n                    ComponentType.ReadWrite<");
            
            #line default
            #line hidden
            
            #line 176 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 176 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".ReceivedUpdates>(),\r\n                    ComponentType.ReadWrite<AuthorityChange" +
                    "s<");
            
            #line default
            #line hidden
            
            #line 177 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 177 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".Component>>(),\r\n");
            
            #line default
            #line hidden
            
            #line 178 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 foreach (var eventDetails in eventDetailsList) { 
            
            #line default
            #line hidden
            
            #line 179 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    ComponentType.ReadWrite<ReceivedEvents.");
            
            #line default
            #line hidden
            
            #line 179 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.EventName ));
            
            #line default
            #line hidden
            
            #line 179 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(),\r\n");
            
            #line default
            #line hidden
            
            #line 180 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 181 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 182 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    ComponentType.ReadWrite<CommandRequests.");
            
            #line default
            #line hidden
            
            #line 182 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 182 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(),\r\n                    ComponentType.ReadWrite<CommandResponses.");
            
            #line default
            #line hidden
            
            #line 183 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 183 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(),\r\n");
            
            #line default
            #line hidden
            
            #line 184 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 185 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@"                },
            };

            public override void CleanComponents(NativeArray<ArchetypeChunk> chunkArray, ComponentSystemBase system,
                EntityCommandBuffer buffer)
            {
                var entityType = system.GetArchetypeChunkEntityType();
                var componentAddedType = system.GetArchetypeChunkComponentType<ComponentAdded<");
            
            #line default
            #line hidden
            
            #line 192 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 192 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".Component>>();\r\n                var componentRemovedType = system.GetArchetypeCh" +
                    "unkComponentType<ComponentRemoved<");
            
            #line default
            #line hidden
            
            #line 193 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 193 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".Component>>();\r\n                var receivedUpdateType = system.GetArchetypeChun" +
                    "kComponentType<");
            
            #line default
            #line hidden
            
            #line 194 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 194 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".ReceivedUpdates>();\r\n                var authorityChangeType = system.GetArchety" +
                    "peChunkComponentType<AuthorityChanges<");
            
            #line default
            #line hidden
            
            #line 195 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 195 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".Component>>();\r\n");
            
            #line default
            #line hidden
            
            #line 196 "Templates/UnityReactiveComponentHandlersGenerator.tt"

for (var i = 0; i < eventDetailsList.Count; i++) {
var eventDetails = eventDetailsList[i];

            
            #line default
            #line hidden
            
            #line 200 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                var ");
            
            #line default
            #line hidden
            
            #line 200 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.CamelCaseEventName ));
            
            #line default
            #line hidden
            
            #line 200 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("EventType = system.GetArchetypeChunkComponentType<ReceivedEvents.");
            
            #line default
            #line hidden
            
            #line 200 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.EventName ));
            
            #line default
            #line hidden
            
            #line 200 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">();\r\n");
            
            #line default
            #line hidden
            
            #line 201 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 202 "Templates/UnityReactiveComponentHandlersGenerator.tt"

for (var j = 0; j < commandDetailsList.Count; j++) {
    var commandDetails = commandDetailsList[j];

            
            #line default
            #line hidden
            
            #line 206 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("\r\n                var ");
            
            #line default
            #line hidden
            
            #line 207 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 207 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("RequestType = system.GetArchetypeChunkComponentType<CommandRequests.");
            
            #line default
            #line hidden
            
            #line 207 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 207 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">();\r\n                var ");
            
            #line default
            #line hidden
            
            #line 208 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 208 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("ResponseType = system.GetArchetypeChunkComponentType<CommandResponses.");
            
            #line default
            #line hidden
            
            #line 208 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 208 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">();\r\n");
            
            #line default
            #line hidden
            
            #line 209 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 210 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@"
                foreach (var chunk in chunkArray)
                {
                    var entities = chunk.GetNativeArray(entityType);

                    // Updates
                    if (chunk.Has(receivedUpdateType))
                    {
                        var updateArray = chunk.GetNativeArray(receivedUpdateType);
                        for (int i = 0; i < entities.Length; ++i)
                        {
                            buffer.RemoveComponent<");
            
            #line default
            #line hidden
            
            #line 221 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 221 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@".ReceivedUpdates>(entities[i]);
                            var updateList = updateArray[i].Updates;

                            // Pool update lists to avoid excessive allocation
                            updateList.Clear();
                            ");
            
            #line default
            #line hidden
            
            #line 226 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 226 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@".Update.Pool.Push(updateList);

                            ReferenceTypeProviders.UpdatesProvider.Free(updateArray[i].handle);
                        }
                    }

                    // Component Added
                    if (chunk.Has(componentAddedType))
                    {
                        for (int i = 0; i < entities.Length; ++i)
                        {
                            buffer.RemoveComponent<ComponentAdded<");
            
            #line default
            #line hidden
            
            #line 237 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 237 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@".Component>>(entities[i]);
                        }
                    }

                    // Component Removed
                    if (chunk.Has(componentRemovedType))
                    {
                        for (int i = 0; i < entities.Length; ++i)
                        {
                            buffer.RemoveComponent<ComponentRemoved<");
            
            #line default
            #line hidden
            
            #line 246 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 246 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@".Component>>(entities[i]);
                        }
                    }

                    // Authority
                    if (chunk.Has(authorityChangeType))
                    {
                        var authorityChangeArray = chunk.GetNativeArray(authorityChangeType);
                        for (int i = 0; i < entities.Length; ++i)
                        {
                            buffer.RemoveComponent<AuthorityChanges<");
            
            #line default
            #line hidden
            
            #line 256 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 256 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(".Component>>(entities[i]);\r\n                            AuthorityChangesProvider." +
                    "Free(authorityChangeArray[i].Handle);\r\n                        }\r\n              " +
                    "      }\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 261 "Templates/UnityReactiveComponentHandlersGenerator.tt"

for (var i = 0; i < eventDetailsList.Count; i++) {
var eventDetails = eventDetailsList[i];

            
            #line default
            #line hidden
            
            #line 265 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    // ");
            
            #line default
            #line hidden
            
            #line 265 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.EventName ));
            
            #line default
            #line hidden
            
            #line 265 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(" Event\r\n                    if (chunk.Has(");
            
            #line default
            #line hidden
            
            #line 266 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.CamelCaseEventName ));
            
            #line default
            #line hidden
            
            #line 266 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("EventType))\r\n                    {\r\n                        var ");
            
            #line default
            #line hidden
            
            #line 268 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.CamelCaseEventName ));
            
            #line default
            #line hidden
            
            #line 268 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("EventArray = chunk.GetNativeArray(");
            
            #line default
            #line hidden
            
            #line 268 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.CamelCaseEventName ));
            
            #line default
            #line hidden
            
            #line 268 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("EventType);\r\n                        for (int i = 0; i < entities.Length; ++i)\r\n " +
                    "                       {\r\n                            buffer.RemoveComponent<Rec" +
                    "eivedEvents.");
            
            #line default
            #line hidden
            
            #line 271 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.EventName ));
            
            #line default
            #line hidden
            
            #line 271 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(entities[i]);\r\n                            ReferenceTypeProviders.");
            
            #line default
            #line hidden
            
            #line 272 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.EventName ));
            
            #line default
            #line hidden
            
            #line 272 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("Provider.Free(");
            
            #line default
            #line hidden
            
            #line 272 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( eventDetails.CamelCaseEventName ));
            
            #line default
            #line hidden
            
            #line 272 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("EventArray[i].handle);\r\n                        }\r\n                    }\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 276 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 277 "Templates/UnityReactiveComponentHandlersGenerator.tt"

for (var j = 0; j < commandDetailsList.Count; j++) {
    var commandDetails = commandDetailsList[j];

            
            #line default
            #line hidden
            
            #line 281 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("                    // ");
            
            #line default
            #line hidden
            
            #line 281 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 281 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(" Command\r\n                    if (chunk.Has(");
            
            #line default
            #line hidden
            
            #line 282 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 282 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("RequestType))\r\n                    {\r\n                        var ");
            
            #line default
            #line hidden
            
            #line 284 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 284 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("RequestArray = chunk.GetNativeArray(");
            
            #line default
            #line hidden
            
            #line 284 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 284 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("RequestType);\r\n                        for (int i = 0; i < entities.Length; ++i)\r" +
                    "\n                        {\r\n                            buffer.RemoveComponent<C" +
                    "ommandRequests.");
            
            #line default
            #line hidden
            
            #line 287 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 287 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(entities[i]);\r\n                            ReferenceTypeProviders.");
            
            #line default
            #line hidden
            
            #line 288 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 288 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("RequestsProvider.Free(");
            
            #line default
            #line hidden
            
            #line 288 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 288 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("RequestArray[i].CommandListHandle);\r\n                        }\r\n                 " +
                    "   }\r\n\r\n                    if (chunk.Has(");
            
            #line default
            #line hidden
            
            #line 292 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 292 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("ResponseType))\r\n                    {\r\n                        var ");
            
            #line default
            #line hidden
            
            #line 294 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 294 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("ResponseArray = chunk.GetNativeArray(");
            
            #line default
            #line hidden
            
            #line 294 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 294 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("ResponseType);\r\n                        for (int i = 0; i < entities.Length; ++i)" +
                    "\r\n                        {\r\n                            buffer.RemoveComponent<" +
                    "CommandResponses.");
            
            #line default
            #line hidden
            
            #line 297 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 297 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(">(entities[i]);\r\n                            ReferenceTypeProviders.");
            
            #line default
            #line hidden
            
            #line 298 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 298 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("ResponsesProvider.Free(");
            
            #line default
            #line hidden
            
            #line 298 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CamelCaseCommandName ));
            
            #line default
            #line hidden
            
            #line 298 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write("ResponseArray[i].CommandListHandle);\r\n                        }\r\n                " +
                    "    }\r\n");
            
            #line default
            #line hidden
            
            #line 301 "Templates/UnityReactiveComponentHandlersGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 302 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@"                }
            }
        }

        internal class AcknowledgeAuthorityLossHandler : AbstractAcknowledgeAuthorityLossHandler
       {
            public override EntityQueryDesc Query => new EntityQueryDesc
            {
                All = new ComponentType[]
                {
                    ComponentType.ReadOnly<AuthorityLossImminent<");
            
            #line default
            #line hidden
            
            #line 312 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 312 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@".Component>>(),
                    ComponentType.ReadOnly<SpatialEntityId>()
                },
            };

            public override void AcknowledgeAuthorityLoss(NativeArray<ArchetypeChunk> chunkArray, ComponentSystemBase system,
                ComponentUpdateSystem updateSystem)
            {
                var authorityLossType = system.GetArchetypeChunkComponentType<AuthorityLossImminent<");
            
            #line default
            #line hidden
            
            #line 320 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentNamespace ));
            
            #line default
            #line hidden
            
            #line 320 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(@".Component>>();
                var spatialEntityType = system.GetArchetypeChunkComponentType<SpatialEntityId>();

                foreach (var chunk in chunkArray)
                {
                    var authorityArray = chunk.GetNativeArray(authorityLossType);
                    var spatialEntityIdArray = chunk.GetNativeArray(spatialEntityType);

                    for (int i = 0; i < authorityArray.Length; ++i)
                    {
                        if (authorityArray[i].AcknowledgeAuthorityLoss)
                        {
                            updateSystem.AcknowledgeAuthorityLoss(spatialEntityIdArray[i].EntityId,
                                ");
            
            #line default
            #line hidden
            
            #line 333 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentDetails.ComponentId ));
            
            #line default
            #line hidden
            
            #line 333 "Templates/UnityReactiveComponentHandlersGenerator.tt"
            this.Write(");\r\n                        }\r\n                    }\r\n                }\r\n        " +
                    "    }\r\n        }\r\n    }\r\n}\r\n#endif\r\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class UnityReactiveComponentHandlersGeneratorBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
