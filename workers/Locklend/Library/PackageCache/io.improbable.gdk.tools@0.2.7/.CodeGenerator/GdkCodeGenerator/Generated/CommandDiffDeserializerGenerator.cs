//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Improbable.Gdk.CodeGenerator {
    using System;
    using Improbable.Gdk.CodeGeneration.Jobs;
    
    
    public partial class CommandDiffDeserializerGenerator : CommandDiffDeserializerGeneratorBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 3 "Templates/CommandDiffDeserializerGenerator.tt"

    var componentDetails = GetComponentDetails();
    var generatedHeader = CommonGeneratorUtils.GetGeneratedHeader();
    var commandDetailsList = GetCommandDetailsList();

            
            #line default
            #line hidden
            
            #line 8 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( generatedHeader ));
            
            #line default
            #line hidden
            
            #line 8 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("\r\n\r\nusing Improbable.Gdk.Core;\r\nusing Improbable.Worker.CInterop;\r\n\r\nnamespace ");
            
            #line default
            #line hidden
            
            #line 13 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( qualifiedNamespace ));
            
            #line default
            #line hidden
            
            #line 13 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("\r\n{\r\n    public partial class ");
            
            #line default
            #line hidden
            
            #line 15 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentDetails.ComponentName ));
            
            #line default
            #line hidden
            
            #line 15 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("\r\n    {\r\n");
            
            #line default
            #line hidden
            
            #line 17 "Templates/CommandDiffDeserializerGenerator.tt"
 foreach (var command in commandDetailsList) {
        var receivedRequestType = command.CommandName + ".ReceivedRequest";
        var receivedResponseType = command.CommandName + ".ReceivedResponse";
        var requestType = command.CommandName + ".Request";
        var responseType = command.CommandName + ".Response";

            
            #line default
            #line hidden
            
            #line 23 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("        public class ");
            
            #line default
            #line hidden
            
            #line 23 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandName ));
            
            #line default
            #line hidden
            
            #line 23 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("DiffCommandDeserializer : ICommandDiffDeserializer\r\n        {\r\n            public" +
                    " uint GetComponentId()\r\n            {\r\n                return ComponentId;\r\n    " +
                    "        }\r\n\r\n            public uint GetCommandId()\r\n            {\r\n            " +
                    "    return ");
            
            #line default
            #line hidden
            
            #line 32 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 32 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(";\r\n            }\r\n\r\n            public void AddRequestToDiff(CommandRequestOp op," +
                    " ViewDiff diff)\r\n            {\r\n                var deserializedRequest = ");
            
            #line default
            #line hidden
            
            #line 37 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 37 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(".Serialization.Deserialize(op.Request.SchemaData.Value.GetObject());\r\n\r\n         " +
                    "       var request = new ");
            
            #line default
            #line hidden
            
            #line 39 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedRequestType ));
            
            #line default
            #line hidden
            
            #line 39 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(@"(
                    new EntityId(op.EntityId),
                    op.RequestId,
                    op.CallerWorkerId,
                    op.CallerAttributeSet,
                    deserializedRequest);

                diff.AddCommandRequest(request, ComponentId, ");
            
            #line default
            #line hidden
            
            #line 46 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 46 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(");\r\n            }\r\n\r\n            public void AddResponseToDiff(CommandResponseOp " +
                    "op, ViewDiff diff, CommandMetaDataAggregate commandMetaData)\r\n            {\r\n   " +
                    "             ");
            
            #line default
            #line hidden
            
            #line 51 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 51 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("? rawResponse = null;\r\n                if (op.StatusCode == StatusCode.Success)\r\n" +
                    "                {\r\n                    rawResponse = ");
            
            #line default
            #line hidden
            
            #line 54 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 54 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(".Serialization.Deserialize(op.Response.SchemaData.Value.GetObject());\r\n          " +
                    "      }\r\n\r\n                var commandContext = commandMetaData.GetContext<");
            
            #line default
            #line hidden
            
            #line 57 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 57 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(">(ComponentId, ");
            
            #line default
            #line hidden
            
            #line 57 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 57 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(", op.RequestId);\r\n                commandMetaData.MarkIdForRemoval(ComponentId, ");
            
            #line default
            #line hidden
            
            #line 58 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 58 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(", op.RequestId);\r\n\r\n                var response = new ");
            
            #line default
            #line hidden
            
            #line 60 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( receivedResponseType ));
            
            #line default
            #line hidden
            
            #line 60 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(@"(
                    commandContext.SendingEntity,
                    new EntityId(op.EntityId),
                    op.Message,
                    op.StatusCode,
                    rawResponse,
                    commandContext.Request,
                    commandContext.Context,
                    commandContext.RequestId);

                diff.AddCommandResponse(response, ComponentId, ");
            
            #line default
            #line hidden
            
            #line 70 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 70 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(");\r\n            }\r\n        }\r\n\r\n        public class ");
            
            #line default
            #line hidden
            
            #line 74 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandName ));
            
            #line default
            #line hidden
            
            #line 74 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("CommandSerializer : ICommandSerializer\r\n        {\r\n            public uint GetCom" +
                    "ponentId()\r\n            {\r\n                return ComponentId;\r\n            }\r\n\r" +
                    "\n            public uint GetCommandId()\r\n            {\r\n                return ");
            
            #line default
            #line hidden
            
            #line 83 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 83 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(";\r\n            }\r\n\r\n            public void Serialize(MessagesToSend messages, Se" +
                    "rializedMessagesToSend serializedMessages, CommandMetaData commandMetaData)\r\n   " +
                    "         {\r\n                var storage = (");
            
            #line default
            #line hidden
            
            #line 88 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandName ));
            
            #line default
            #line hidden
            
            #line 88 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("CommandsToSendStorage) messages.GetCommandSendStorage(ComponentId, ");
            
            #line default
            #line hidden
            
            #line 88 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 88 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(@");

                var requests = storage.GetRequests();

                for (int i = 0; i < requests.Count; ++i)
                {
                    ref readonly var request = ref requests[i];
                    var context = new CommandContext<");
            
            #line default
            #line hidden
            
            #line 95 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 95 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(">(request.SendingEntity, request.Request.Payload, request.Request.Context, reques" +
                    "t.RequestId);\r\n                    commandMetaData.AddRequest<");
            
            #line default
            #line hidden
            
            #line 96 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 96 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(">(ComponentId, ");
            
            #line default
            #line hidden
            
            #line 96 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 96 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(", in context);\r\n\r\n                    var schemaCommandRequest = global::Improbab" +
                    "le.Worker.CInterop.SchemaCommandRequest.Create();\r\n                    ");
            
            #line default
            #line hidden
            
            #line 99 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 99 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(".Serialization.Serialize(request.Request.Payload, schemaCommandRequest.GetObject(" +
                    "));\r\n                    var serializedRequest = new global::Improbable.Worker.C" +
                    "Interop.CommandRequest(ComponentId, ");
            
            #line default
            #line hidden
            
            #line 100 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 100 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(", schemaCommandRequest);\r\n\r\n                    serializedMessages.AddRequest(ser" +
                    "ializedRequest, ");
            
            #line default
            #line hidden
            
            #line 102 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 102 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(@",
                        request.Request.TargetEntityId.Id, request.Request.TimeoutMillis, request.RequestId);
                }

                var responses = storage.GetResponses();
                for (int i = 0; i < responses.Count; ++i)
                {
                    ref readonly var response = ref responses[i];
                    if (response.FailureMessage != null)
                    {
                        // Send a command failure if the string is non-null.

                        serializedMessages.AddFailure(response.FailureMessage, (uint) response.RequestId);
                        continue;
                    }

                    var schemaCommandResponse = global::Improbable.Worker.CInterop.SchemaCommandResponse.Create();
                    ");
            
            #line default
            #line hidden
            
            #line 119 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 119 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(".Serialization.Serialize(response.Payload.Value, schemaCommandResponse.GetObject(" +
                    "));\r\n\r\n                    var serializedResponse = new global::Improbable.Worke" +
                    "r.CInterop.CommandResponse(ComponentId, ");
            
            #line default
            #line hidden
            
            #line 121 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( command.CommandIndex ));
            
            #line default
            #line hidden
            
            #line 121 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write(", schemaCommandResponse);\r\n\r\n                    serializedMessages.AddResponse(s" +
                    "erializedResponse, (uint) response.RequestId);\r\n                }\r\n            }" +
                    "\r\n        }\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 128 "Templates/CommandDiffDeserializerGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 129 "Templates/CommandDiffDeserializerGenerator.tt"
            this.Write("    }\r\n}\r\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class CommandDiffDeserializerGeneratorBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
