//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Improbable.Gdk.CodeGenerator {
    using System;
    using Improbable.Gdk.CodeGeneration.Jobs;
    
    
    public partial class UnityCommandPayloadGenerator : UnityCommandPayloadGeneratorBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 3 "Templates/UnityCommandPayloadGenerator.tt"

    var generatedHeader = CommonGeneratorUtils.GetGeneratedHeader();
    var componentDetails = GetComponentDetails();
    var commandDetailsList = GetCommandDetailsList();

            
            #line default
            #line hidden
            
            #line 8 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( generatedHeader ));
            
            #line default
            #line hidden
            
            #line 8 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("\r\n\r\nusing System.Collections.Generic;\r\nusing Improbable.Worker.CInterop;\r\nusing I" +
                    "mprobable.Gdk.Core;\r\nusing Improbable.Gdk.Core.Commands;\r\n\r\nnamespace ");
            
            #line default
            #line hidden
            
            #line 15 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( qualifiedNamespace ));
            
            #line default
            #line hidden
            
            #line 15 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("\r\n{\r\n    public partial class ");
            
            #line default
            #line hidden
            
            #line 17 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( componentDetails.ComponentName ));
            
            #line default
            #line hidden
            
            #line 17 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("\r\n    {\r\n");
            
            #line default
            #line hidden
            
            #line 19 "Templates/UnityCommandPayloadGenerator.tt"
 foreach (var commandDetails in commandDetailsList) {
            
            #line default
            #line hidden
            
            #line 20 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("        public partial class ");
            
            #line default
            #line hidden
            
            #line 20 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CommandName ));
            
            #line default
            #line hidden
            
            #line 20 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("\r\n        {\r\n            public struct Request : ICommandRequest\r\n            {\r\n" +
                    "                public EntityId TargetEntityId;\r\n                public ");
            
            #line default
            #line hidden
            
            #line 25 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 25 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(" Payload;\r\n                public uint? TimeoutMillis;\r\n                public bo" +
                    "ol AllowShortCircuiting;\r\n                public object Context;\r\n\r\n            " +
                    "    public Request(\r\n                    EntityId targetEntityId,\r\n             " +
                    "       ");
            
            #line default
            #line hidden
            
            #line 32 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 32 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(@" request,
                    uint? timeoutMillis = null,
                    bool allowShortCircuiting = false,
                    object context = null)
                {
                    TargetEntityId = targetEntityId;
                    Payload = request;
                    TimeoutMillis = timeoutMillis;
                    AllowShortCircuiting = allowShortCircuiting;
                    Context = context;
                }
            }


            public readonly struct ReceivedRequest : IReceivedCommandRequest
            {
                public readonly EntityId EntityId;
                public readonly long RequestId;
                public readonly string CallerWorkerId;
                public readonly List<string> CallerAttributeSet;
                public readonly ");
            
            #line default
            #line hidden
            
            #line 52 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 52 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(" Payload;\r\n\r\n                public ReceivedRequest(\r\n                    EntityI" +
                    "d entityId,\r\n                    long requestId,\r\n                    string cal" +
                    "lerWorkerId,\r\n                    List<string> callerAttributeSet,\r\n            " +
                    "        ");
            
            #line default
            #line hidden
            
            #line 59 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 59 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(@" request)
                {
                    EntityId = entityId;
                    RequestId = requestId;
                    CallerWorkerId = callerWorkerId;
                    CallerAttributeSet = callerAttributeSet;
                    Payload = request;
                }

                long IReceivedCommandRequest.GetRequestId()
                {
                    return RequestId;
                }

                EntityId IReceivedEntityMessage.GetEntityId()
                {
                    return EntityId;
                }
            }

            /// <summary>
            ///     A Response will be considered a failure if FailureMessage is not null;
            /// </summary>
            // todo Should consider making this a union of a failure and a response
            // todo consider making this readonly
            public struct Response : ICommandResponse
            {
                public long RequestId;
                public ");
            
            #line default
            #line hidden
            
            #line 87 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 87 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("? Payload;\r\n                public string FailureMessage;\r\n\r\n                publ" +
                    "ic Response(long requestId, ");
            
            #line default
            #line hidden
            
            #line 90 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 90 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(@" payload)
                {
                    RequestId = requestId;
                    Payload = payload;
                    FailureMessage = null;
                }

                public Response(long requestId, string failureMessage)
                {
                    RequestId = requestId;
                    Payload = null;
                    FailureMessage = failureMessage;
                }
            }

            public readonly struct ReceivedResponse : IReceivedCommandResponse
            {
                public readonly Unity.Entities.Entity SendingEntity;
                public readonly EntityId EntityId;
                public readonly string Message;
                public readonly StatusCode StatusCode;
                public readonly ");
            
            #line default
            #line hidden
            
            #line 111 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 111 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("? ResponsePayload;\r\n                public readonly ");
            
            #line default
            #line hidden
            
            #line 112 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 112 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(@" RequestPayload;
                public readonly global::System.Object Context;
                public readonly long RequestId;

                public ReceivedResponse(
                    Unity.Entities.Entity sendingEntity,
                    EntityId entityId,
                    string message,
                    StatusCode statusCode,
                    ");
            
            #line default
            #line hidden
            
            #line 121 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 121 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("? response,\r\n                    ");
            
            #line default
            #line hidden
            
            #line 122 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnRequestType ));
            
            #line default
            #line hidden
            
            #line 122 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(@" request,
                    global::System.Object context,
                    long requestId)
                {
                    SendingEntity = sendingEntity;
                    EntityId = entityId;
                    Message = message;
                    StatusCode = statusCode;
                    ResponsePayload = response;
                    RequestPayload = request;
                    Context = context;
                    RequestId = requestId;
                }

                long IReceivedCommandResponse.GetRequestId()
                {
                    return RequestId;
                }
            }

            public readonly struct RawReceivedResponse : IRawReceivedCommandResponse
            {
                public readonly EntityId EntityId;
                public readonly string Message;
                public readonly StatusCode StatusCode;
                public readonly ");
            
            #line default
            #line hidden
            
            #line 147 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 147 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(@"? ResponsePayload;
                public readonly long RequestId;

                public RawReceivedResponse(
                    EntityId entityId,
                    string message,
                    StatusCode statusCode,
                    ");
            
            #line default
            #line hidden
            
            #line 154 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.FqnResponseType ));
            
            #line default
            #line hidden
            
            #line 154 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write(@"? response,
                    long requestId)
                {
                    EntityId = entityId;
                    Message = message;
                    StatusCode = statusCode;
                    ResponsePayload = response;
                    RequestId = requestId;
                }
            }
        }
");
            
            #line default
            #line hidden
            
            #line 165 "Templates/UnityCommandPayloadGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 166 "Templates/UnityCommandPayloadGenerator.tt"
            this.Write("    }\r\n}\r\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class UnityCommandPayloadGeneratorBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
